:root {
    --azul: #0071b7;
    --blanco: #FFF;
    --naranja: #ff4f1e;
}
html {
    font-size: 62.5%; /** 1REM = 10pX **/
}

body {
    background-color: var(--azul);
    font-family:  'Lato', sans-serif;
    font-size: 1.6rem;
}

.caja-curso {
    background-color: var(--naranja);
    text-align: center;
    color: var(--blanco);
    padding: 5rem;

}
.caja-curso h1 {
    margin: 0;
}
.caja-curso p {
    font-size: 2.4rem;
}
.caja-curso a {
    font-size: 2.4rem;
    padding: 2rem;
    display: inline-block;
    text-decoration: none;
    color: var(--blanco);
    padding: 0;
}


h1, h2 {
    color: var(--blanco);
    text-align: center;
    margin: 5rem 0;
}

.contenedor {
    max-width: 120rem;
    margin-inline: auto;
}
.box {
    background-color: var(--naranja);
    color: var(--blanco);
    padding: 5rem;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 4rem;
    margin-bottom: 2rem;
}


/*01*/

.grid-1{
    display: grid;

}

.grid-2 {
    display: grid;
    grid-template-columns: repeat(3, 300px);
}

.grid-2 .box:nth-child(2){
    grid-column: 1 / 2;
}

.grid-3{
    display: grid;
    grid-template-rows: repeat(2, 300px);
    grid-template-columns: repeat(3, 300px);
    
}

.grid-3 .box:nth-child(2){
    grid-row: 1 / 2;
    
}

.grid-4{

    display: grid;
    grid-template-rows: repeat(2, 300px);
    grid-template-columns: repeat(3, 300px);
    
}

.grid-4 .box:nth-child(2){
    grid-column: 2 / span 2;

}

.grid-5{

    display: grid;
    
    grid: repeat(2, 300px ) / repeat(3, 300px );
    
}

.grid-6{
    display: grid;
    grid: repeat(2, 300px ) / repeat(3, 300px );
    grid-auto-flow: dense;
    
    
}

.grid-6 .box:nth-child(2){
    grid-column: 1 / 2;
}

.grid-7{
    display: grid;
    grid-template-columns: 2fr repeat( 2 , 1fr);
    grid: repeat(2, 50rem ) / 2fr repeat(2, 1fr );
}

.grid-8{
    display: grid;
    grid: repeat(2, 20rem ) / repeat(3, 1fr );
    gap: 4rem;
}

.grid-8 .box{
    margin: 0;
}

.grid-9{
    display: grid;
    height: 120rem;
    grid-template-columns: repeat(3, 1fr);
    grid-template-areas: "header header header"
                         "nav nav nav"
                         "contenido contenido sidebar"
                         "footer footer footer" ;
    grid-template-rows: 2.5fr 1fr 6fr 2.5fr;
    gap: 4rem;
}

.grid-9 .box{
    margin: 0 ;
}

.grid-9 .box:nth-child(1){
    grid-area: header;
}

.grid-9 .box:nth-child(2){
    grid-area: nav;
}

.grid-9 .box:nth-child(3){
    grid-area: contenido;
}

.grid-9 .box:nth-child(5){
    grid-area: footer;
}


.grid-10{
    display: grid;
    height: 120rem;
    grid-template: "header header header" 2.5fr
                    "nav nav nav" 1fr
                    "contenido contenido sidebar" 6fr
                    "footer footer footer"  2.5fr / 1fr 1fr 1fr  ;
    gap: 4rem;
}

.grid-10 .box{
    margin: 0 ;
}

.grid-10 .box:nth-child(1){
    grid-area: header;
}

.grid-10 .box:nth-child(2){
    grid-area: nav;
}

.grid-10 .box:nth-child(3){
    grid-area: contenido;
}

.grid-10 .box:nth-child(5){
    grid-area: footer;
}

.grid-11{
    display: grid;
    height: 300px;
    grid-template-columns: repeat( 6, 1fr);
    place-content: start;

}

.grid-12{
    display: grid;
    grid-template-columns: repeat(auto-fill, 200px); /*No soporta fracciones, hay que usar minmax, crea columnas de acuerdo al tamaño especificado en el repeat (esto crearias n columnas el tamaño del contenedor)*/
    grid-template-columns: repeat(auto-fit, 200px); /*No soporta fracciones, hay que usar minmax. Este si detecta los hijos (elementos) y crea la cantidad de columnas de acuerdo a la cantidad estos. En este caso solo crearia tres columnas de 200px dejando el resto de espacio sin columnas*/
    
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr))
   /*La funcion minmax sirve para establecer el tamaño minimo y maximo de un elemento si el tamaño es menos del minimo pasa al tamañop maximo y nunca va aser mas grande que el tamaño maximo(la diferncia es que esta vez se ocupa todo el ancho diponible del contenedor por el tamaño maximo que es 1fr)* /
}










